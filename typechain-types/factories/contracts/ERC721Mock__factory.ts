/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ERC721Mock,
  ERC721MockInterface,
} from "../../contracts/ERC721Mock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200282f3803806200282f8339818101604052810190620000379190620002c2565b818181600090805190602001906200005192919062000075565b5080600190805190602001906200006a92919062000075565b5050505050620003ab565b828054620000839062000376565b90600052602060002090601f016020900481019282620000a75760008555620000f3565b82601f10620000c257805160ff1916838001178555620000f3565b82800160010185558215620000f3579182015b82811115620000f2578251825591602001919060010190620000d5565b5b50905062000102919062000106565b5090565b5b808211156200012157600081600090555060010162000107565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200018e8262000143565b810181811067ffffffffffffffff82111715620001b057620001af62000154565b5b80604052505050565b6000620001c562000125565b9050620001d3828262000183565b919050565b600067ffffffffffffffff821115620001f657620001f562000154565b5b620002018262000143565b9050602081019050919050565b60005b838110156200022e57808201518184015260208101905062000211565b838111156200023e576000848401525b50505050565b60006200025b6200025584620001d8565b620001b9565b9050828152602081018484840111156200027a57620002796200013e565b5b620002878482856200020e565b509392505050565b600082601f830112620002a757620002a662000139565b5b8151620002b984826020860162000244565b91505092915050565b60008060408385031215620002dc57620002db6200012f565b5b600083015167ffffffffffffffff811115620002fd57620002fc62000134565b5b6200030b858286016200028f565b925050602083015167ffffffffffffffff8111156200032f576200032e62000134565b5b6200033d858286016200028f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200038f57607f821691505b602082108103620003a557620003a462000347565b5b50919050565b61247480620003bb6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb4651461025b578063b88d4fde14610277578063c87b56dd14610293578063e985e9c5146102c3576100ea565b80636352211e146101dd57806370a082311461020d57806395d89b411461023d576100ea565b8063095ea7b3116100c8578063095ea7b31461016d57806323b872dd1461018957806340c10f19146101a557806342842e0e146101c1576100ea565b806301ffc9a7146100ef57806306fdde031461011f578063081812fc1461013d575b600080fd5b610109600480360381019061010491906115d5565b6102f3565b604051610116919061161d565b60405180910390f35b6101276103d5565b60405161013491906116d1565b60405180910390f35b61015760048036038101906101529190611729565b610467565b6040516101649190611797565b60405180910390f35b610187600480360381019061018291906117de565b6104ad565b005b6101a3600480360381019061019e919061181e565b6105c4565b005b6101bf60048036038101906101ba91906117de565b610624565b005b6101db60048036038101906101d6919061181e565b610632565b005b6101f760048036038101906101f29190611729565b610652565b6040516102049190611797565b60405180910390f35b61022760048036038101906102229190611871565b610703565b60405161023491906118ad565b60405180910390f35b6102456107ba565b60405161025291906116d1565b60405180910390f35b610275600480360381019061027091906118f4565b61084c565b005b610291600480360381019061028c9190611a69565b610862565b005b6102ad60048036038101906102a89190611729565b6108c4565b6040516102ba91906116d1565b60405180910390f35b6102dd60048036038101906102d89190611aec565b61092c565b6040516102ea919061161d565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103be57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103ce57506103cd826109c0565b5b9050919050565b6060600080546103e490611b5b565b80601f016020809104026020016040519081016040528092919081815260200182805461041090611b5b565b801561045d5780601f106104325761010080835404028352916020019161045d565b820191906000526020600020905b81548152906001019060200180831161044057829003601f168201915b5050505050905090565b600061047282610a2a565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104b882610652565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610528576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051f90611bfe565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610547610a75565b73ffffffffffffffffffffffffffffffffffffffff161480610576575061057581610570610a75565b61092c565b5b6105b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ac90611c90565b60405180910390fd5b6105bf8383610a7d565b505050565b6105d56105cf610a75565b82610b36565b610614576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060b90611d22565b60405180910390fd5b61061f838383610bcb565b505050565b61062e8282610e31565b5050565b61064d83838360405180602001604052806000815250610862565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f190611d8e565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610773576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076a90611e20565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600180546107c990611b5b565b80601f01602080910402602001604051908101604052809291908181526020018280546107f590611b5b565b80156108425780601f1061081757610100808354040283529160200191610842565b820191906000526020600020905b81548152906001019060200180831161082557829003601f168201915b5050505050905090565b61085e610857610a75565b838361100a565b5050565b61087361086d610a75565b83610b36565b6108b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a990611d22565b60405180910390fd5b6108be84848484611176565b50505050565b60606108cf82610a2a565b60006108d96111d2565b905060008151116108f95760405180602001604052806000815250610924565b80610903846111e9565b604051602001610914929190611e7c565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610a3381611349565b610a72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6990611d8e565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610af083610652565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610b4283610652565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b845750610b83818561092c565b5b80610bc257508373ffffffffffffffffffffffffffffffffffffffff16610baa84610467565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610beb82610652565b73ffffffffffffffffffffffffffffffffffffffff1614610c41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3890611f12565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cb0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca790611fa4565b60405180910390fd5b610cbb8383836113b5565b610cc6600082610a7d565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d169190611ff3565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d6d9190612027565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e2c8383836113ba565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ea0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e97906120c9565b60405180910390fd5b610ea981611349565b15610ee9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee090612135565b60405180910390fd5b610ef5600083836113b5565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f459190612027565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611006600083836113ba565b5050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611078576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106f906121a1565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611169919061161d565b60405180910390a3505050565b611181848484610bcb565b61118d848484846113bf565b6111cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c390612233565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b606060008203611230576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611344565b600082905060005b6000821461126257808061124b90612253565b915050600a8261125b91906122ca565b9150611238565b60008167ffffffffffffffff81111561127e5761127d61193e565b5b6040519080825280601f01601f1916602001820160405280156112b05781602001600182028036833780820191505090505b5090505b6000851461133d576001826112c99190611ff3565b9150600a856112d891906122fb565b60306112e49190612027565b60f81b8183815181106112fa576112f961232c565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561133691906122ca565b94506112b4565b8093505050505b919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b505050565b505050565b60006113e08473ffffffffffffffffffffffffffffffffffffffff16611546565b15611539578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611409610a75565b8786866040518563ffffffff1660e01b815260040161142b94939291906123b0565b6020604051808303816000875af192505050801561146757506040513d601f19601f820116820180604052508101906114649190612411565b60015b6114e9573d8060008114611497576040519150601f19603f3d011682016040523d82523d6000602084013e61149c565b606091505b5060008151036114e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114d890612233565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505061153e565b600190505b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6115b28161157d565b81146115bd57600080fd5b50565b6000813590506115cf816115a9565b92915050565b6000602082840312156115eb576115ea611573565b5b60006115f9848285016115c0565b91505092915050565b60008115159050919050565b61161781611602565b82525050565b6000602082019050611632600083018461160e565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611672578082015181840152602081019050611657565b83811115611681576000848401525b50505050565b6000601f19601f8301169050919050565b60006116a382611638565b6116ad8185611643565b93506116bd818560208601611654565b6116c681611687565b840191505092915050565b600060208201905081810360008301526116eb8184611698565b905092915050565b6000819050919050565b611706816116f3565b811461171157600080fd5b50565b600081359050611723816116fd565b92915050565b60006020828403121561173f5761173e611573565b5b600061174d84828501611714565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061178182611756565b9050919050565b61179181611776565b82525050565b60006020820190506117ac6000830184611788565b92915050565b6117bb81611776565b81146117c657600080fd5b50565b6000813590506117d8816117b2565b92915050565b600080604083850312156117f5576117f4611573565b5b6000611803858286016117c9565b925050602061181485828601611714565b9150509250929050565b60008060006060848603121561183757611836611573565b5b6000611845868287016117c9565b9350506020611856868287016117c9565b925050604061186786828701611714565b9150509250925092565b60006020828403121561188757611886611573565b5b6000611895848285016117c9565b91505092915050565b6118a7816116f3565b82525050565b60006020820190506118c2600083018461189e565b92915050565b6118d181611602565b81146118dc57600080fd5b50565b6000813590506118ee816118c8565b92915050565b6000806040838503121561190b5761190a611573565b5b6000611919858286016117c9565b925050602061192a858286016118df565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61197682611687565b810181811067ffffffffffffffff821117156119955761199461193e565b5b80604052505050565b60006119a8611569565b90506119b4828261196d565b919050565b600067ffffffffffffffff8211156119d4576119d361193e565b5b6119dd82611687565b9050602081019050919050565b82818337600083830152505050565b6000611a0c611a07846119b9565b61199e565b905082815260208101848484011115611a2857611a27611939565b5b611a338482856119ea565b509392505050565b600082601f830112611a5057611a4f611934565b5b8135611a608482602086016119f9565b91505092915050565b60008060008060808587031215611a8357611a82611573565b5b6000611a91878288016117c9565b9450506020611aa2878288016117c9565b9350506040611ab387828801611714565b925050606085013567ffffffffffffffff811115611ad457611ad3611578565b5b611ae087828801611a3b565b91505092959194509250565b60008060408385031215611b0357611b02611573565b5b6000611b11858286016117c9565b9250506020611b22858286016117c9565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611b7357607f821691505b602082108103611b8657611b85611b2c565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611be8602183611643565b9150611bf382611b8c565b604082019050919050565b60006020820190508181036000830152611c1781611bdb565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000602082015250565b6000611c7a603e83611643565b9150611c8582611c1e565b604082019050919050565b60006020820190508181036000830152611ca981611c6d565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206e6f7220617070726f766564000000000000000000000000000000000000602082015250565b6000611d0c602e83611643565b9150611d1782611cb0565b604082019050919050565b60006020820190508181036000830152611d3b81611cff565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611d78601883611643565b9150611d8382611d42565b602082019050919050565b60006020820190508181036000830152611da781611d6b565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611e0a602983611643565b9150611e1582611dae565b604082019050919050565b60006020820190508181036000830152611e3981611dfd565b9050919050565b600081905092915050565b6000611e5682611638565b611e608185611e40565b9350611e70818560208601611654565b80840191505092915050565b6000611e888285611e4b565b9150611e948284611e4b565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611efc602583611643565b9150611f0782611ea0565b604082019050919050565b60006020820190508181036000830152611f2b81611eef565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611f8e602483611643565b9150611f9982611f32565b604082019050919050565b60006020820190508181036000830152611fbd81611f81565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611ffe826116f3565b9150612009836116f3565b92508282101561201c5761201b611fc4565b5b828203905092915050565b6000612032826116f3565b915061203d836116f3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561207257612071611fc4565b5b828201905092915050565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b60006120b3602083611643565b91506120be8261207d565b602082019050919050565b600060208201905081810360008301526120e2816120a6565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b600061211f601c83611643565b915061212a826120e9565b602082019050919050565b6000602082019050818103600083015261214e81612112565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b600061218b601983611643565b915061219682612155565b602082019050919050565b600060208201905081810360008301526121ba8161217e565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b600061221d603283611643565b9150612228826121c1565b604082019050919050565b6000602082019050818103600083015261224c81612210565b9050919050565b600061225e826116f3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036122905761228f611fc4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006122d5826116f3565b91506122e0836116f3565b9250826122f0576122ef61229b565b5b828204905092915050565b6000612306826116f3565b9150612311836116f3565b9250826123215761232061229b565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b60006123828261235b565b61238c8185612366565b935061239c818560208601611654565b6123a581611687565b840191505092915050565b60006080820190506123c56000830187611788565b6123d26020830186611788565b6123df604083018561189e565b81810360608301526123f18184612377565b905095945050505050565b60008151905061240b816115a9565b92915050565b60006020828403121561242757612426611573565b5b6000612435848285016123fc565b9150509291505056fea2646970667358221220a708ddeada2187a5b20a921c1e60f955292bc69e7d2a13259a4b5dd478b79d0364736f6c634300080d0033";

type ERC721MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Mock__factory extends ContractFactory {
  constructor(...args: ERC721MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Mock> {
    return super.deploy(name, symbol, overrides || {}) as Promise<ERC721Mock>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  override attach(address: string): ERC721Mock {
    return super.attach(address) as ERC721Mock;
  }
  override connect(signer: Signer): ERC721Mock__factory {
    return super.connect(signer) as ERC721Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721MockInterface {
    return new utils.Interface(_abi) as ERC721MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Mock {
    return new Contract(address, _abi, signerOrProvider) as ERC721Mock;
  }
}
