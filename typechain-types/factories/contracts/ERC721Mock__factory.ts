/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ERC721Mock,
  ERC721MockInterface,
} from "../../contracts/ERC721Mock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requirePaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620039e9380380620039e98339818101604052810190620000379190620003cb565b81818160009080519060200190620000519291906200017e565b5080600190805190602001906200006a9291906200017e565b5050506000600660006101000a81548160ff021916908315150217905550620000a86200009c620000b060201b60201c565b620000b860201b60201c565b5050620004b4565b600033905090565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8280546200018c906200047f565b90600052602060002090601f016020900481019282620001b05760008555620001fc565b82601f10620001cb57805160ff1916838001178555620001fc565b82800160010185558215620001fc579182015b82811115620001fb578251825591602001919060010190620001de565b5b5090506200020b91906200020f565b5090565b5b808211156200022a57600081600090555060010162000210565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000297826200024c565b810181811067ffffffffffffffff82111715620002b957620002b86200025d565b5b80604052505050565b6000620002ce6200022e565b9050620002dc82826200028c565b919050565b600067ffffffffffffffff821115620002ff57620002fe6200025d565b5b6200030a826200024c565b9050602081019050919050565b60005b83811015620003375780820151818401526020810190506200031a565b8381111562000347576000848401525b50505050565b6000620003646200035e84620002e1565b620002c2565b90508281526020810184848401111562000383576200038262000247565b5b6200039084828562000317565b509392505050565b600082601f830112620003b057620003af62000242565b5b8151620003c28482602086016200034d565b91505092915050565b60008060408385031215620003e557620003e462000238565b5b600083015167ffffffffffffffff8111156200040657620004056200023d565b5b620004148582860162000398565b925050602083015167ffffffffffffffff8111156200043857620004376200023d565b5b620004468582860162000398565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200049857607f821691505b602082108103620004ae57620004ad62000450565b5b50919050565b61352580620004c46000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80635c975abb116100de57806395d89b4111610097578063c87b56dd11610071578063c87b56dd14610410578063e985e9c514610440578063f2fde38b14610470578063f74a57d41461048c57610173565b806395d89b41146103ba578063a22cb465146103d8578063b88d4fde146103f457610173565b80635c975abb1461030a5780636352211e1461032857806370a0823114610358578063715018a6146103885780638456cb59146103925780638da5cb5b1461039c57610173565b80632f745c59116101305780632f745c591461024c5780633f4ba83a1461027c57806340c10f191461028657806342842e0e146102a257806342966c68146102be5780634f6ccce7146102da57610173565b806301ffc9a71461017857806306fdde03146101a8578063081812fc146101c6578063095ea7b3146101f657806318160ddd1461021257806323b872dd14610230575b600080fd5b610192600480360381019061018d91906122cb565b610496565b60405161019f9190612313565b60405180910390f35b6101b06104a8565b6040516101bd91906123c7565b60405180910390f35b6101e060048036038101906101db919061241f565b61053a565b6040516101ed919061248d565b60405180910390f35b610210600480360381019061020b91906124d4565b610580565b005b61021a610697565b6040516102279190612523565b60405180910390f35b61024a6004803603810190610245919061253e565b6106a4565b005b610266600480360381019061026191906124d4565b610704565b6040516102739190612523565b60405180910390f35b6102846107a9565b005b6102a0600480360381019061029b91906124d4565b6107bb565b005b6102bc60048036038101906102b7919061253e565b6107d1565b005b6102d860048036038101906102d3919061241f565b6107f1565b005b6102f460048036038101906102ef919061241f565b61084d565b6040516103019190612523565b60405180910390f35b6103126108be565b60405161031f9190612313565b60405180910390f35b610342600480360381019061033d919061241f565b6108d5565b60405161034f919061248d565b60405180910390f35b610372600480360381019061036d9190612591565b610986565b60405161037f9190612523565b60405180910390f35b610390610a3d565b005b61039a610a51565b005b6103a4610a63565b6040516103b1919061248d565b60405180910390f35b6103c2610a8d565b6040516103cf91906123c7565b60405180910390f35b6103f260048036038101906103ed91906125ea565b610b1f565b005b61040e6004803603810190610409919061275f565b610b35565b005b61042a6004803603810190610425919061241f565b610b97565b60405161043791906123c7565b60405180910390f35b61045a600480360381019061045591906127e2565b610bff565b6040516104679190612313565b60405180910390f35b61048a60048036038101906104859190612591565b610c93565b005b610494610d16565b005b60006104a182610d20565b9050919050565b6060600080546104b790612851565b80601f01602080910402602001604051908101604052809291908181526020018280546104e390612851565b80156105305780601f1061050557610100808354040283529160200191610530565b820191906000526020600020905b81548152906001019060200180831161051357829003601f168201915b5050505050905090565b600061054582610d9a565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061058b826108d5565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f2906128f4565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661061a610de5565b73ffffffffffffffffffffffffffffffffffffffff161480610649575061064881610643610de5565b610bff565b5b610688576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067f90612986565b60405180910390fd5b6106928383610ded565b505050565b6000600980549050905090565b6106b56106af610de5565b82610ea6565b6106f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106eb90612a18565b60405180910390fd5b6106ff838383610f3b565b505050565b600061070f83610986565b8210610750576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074790612aaa565b60405180910390fd5b600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054905092915050565b6107b16111a1565b6107b961121f565b565b6107c36111a1565b6107cd8282611282565b5050565b6107ec83838360405180602001604052806000815250610b35565b505050565b6108026107fc610de5565b82610ea6565b610841576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083890612a18565b60405180910390fd5b61084a8161145b565b50565b6000610857610697565b8210610898576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088f90612b3c565b60405180910390fd5b600982815481106108ac576108ab612b5c565b5b90600052602060002001549050919050565b6000600660009054906101000a900460ff16905090565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361097d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097490612bd7565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ed90612c69565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610a456111a1565b610a4f6000611578565b565b610a596111a1565b610a6161163e565b565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060018054610a9c90612851565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac890612851565b8015610b155780601f10610aea57610100808354040283529160200191610b15565b820191906000526020600020905b815481529060010190602001808311610af857829003601f168201915b5050505050905090565b610b31610b2a610de5565b83836116a1565b5050565b610b46610b40610de5565b83610ea6565b610b85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7c90612a18565b60405180910390fd5b610b918484848461180d565b50505050565b6060610ba282610d9a565b6000610bac611869565b90506000815111610bcc5760405180602001604052806000815250610bf7565b80610bd684611880565b604051602001610be7929190612cc5565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610c9b6111a1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0190612d5b565b60405180910390fd5b610d1381611578565b50565b610d1e6119e0565b565b60007f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610d935750610d9282611a29565b5b9050919050565b610da381611b0b565b610de2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd990612bd7565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610e60836108d5565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610eb2836108d5565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610ef45750610ef38185610bff565b5b80610f3257508373ffffffffffffffffffffffffffffffffffffffff16610f1a8461053a565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610f5b826108d5565b73ffffffffffffffffffffffffffffffffffffffff1614610fb1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa890612ded565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611020576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101790612e7f565b60405180910390fd5b61102b838383611b77565b611036600082610ded565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110869190612ece565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110dd9190612f02565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a461119c838383611b87565b505050565b6111a9610de5565b73ffffffffffffffffffffffffffffffffffffffff166111c7610a63565b73ffffffffffffffffffffffffffffffffffffffff161461121d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121490612fa4565b60405180910390fd5b565b6112276119e0565b6000600660006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61126b610de5565b604051611278919061248d565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e890613010565b60405180910390fd5b6112fa81611b0b565b1561133a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113319061307c565b60405180910390fd5b61134660008383611b77565b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113969190612f02565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a461145760008383611b87565b5050565b6000611466826108d5565b905061147481600084611b77565b61147f600083610ded565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546114cf9190612ece565b925050819055506002600083815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905581600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a461157481600084611b87565b5050565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611646611b8c565b6001600660006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861168a610de5565b604051611697919061248d565b60405180910390a1565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361170f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611706906130e8565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516118009190612313565b60405180910390a3505050565b611818848484610f3b565b61182484848484611bd6565b611863576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161185a9061317a565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b6060600082036118c7576040518060400160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506119db565b600082905060005b600082146118f95780806118e29061319a565b915050600a826118f29190613211565b91506118cf565b60008167ffffffffffffffff81111561191557611914612634565b5b6040519080825280601f01601f1916602001820160405280156119475781602001600182028036833780820191505090505b5090505b600085146119d4576001826119609190612ece565b9150600a8561196f9190613242565b603061197b9190612f02565b60f81b81838151811061199157611990612b5c565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856119cd9190613211565b945061194b565b8093505050505b919050565b6119e86108be565b611a27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a1e906132bf565b60405180910390fd5b565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480611af457507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80611b045750611b0382611d5d565b5b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b611b82838383611dc7565b505050565b505050565b611b946108be565b15611bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bcb9061332b565b60405180910390fd5b565b6000611bf78473ffffffffffffffffffffffffffffffffffffffff16611ed9565b15611d50578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611c20610de5565b8786866040518563ffffffff1660e01b8152600401611c4294939291906133a0565b6020604051808303816000875af1925050508015611c7e57506040513d601f19601f82011682018060405250810190611c7b9190613401565b60015b611d00573d8060008114611cae576040519150601f19603f3d011682016040523d82523d6000602084013e611cb3565b606091505b506000815103611cf8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cef9061317a565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611d55565b600190505b949350505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b611dd2838383611efc565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611e1457611e0f81611f54565b611e53565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611e5257611e518382611f9d565b5b5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611e9557611e908161210a565b611ed4565b8273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611ed357611ed282826121db565b5b5b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b611f0783838361225a565b611f0f6108be565b15611f4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f46906134a0565b60405180910390fd5b505050565b600980549050600a600083815260200190815260200160002081905550600981908060018154018082558091505060019003906000526020600020016000909190919091505550565b60006001611faa84610986565b611fb49190612ece565b9050600060086000848152602001908152602001600020549050818114612099576000600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054905080600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550816008600083815260200190815260200160002081905550505b6008600084815260200190815260200160002060009055600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206000905550505050565b6000600160098054905061211e9190612ece565b90506000600a600084815260200190815260200160002054905060006009838154811061214e5761214d612b5c565b5b9060005260206000200154905080600983815481106121705761216f612b5c565b5b906000526020600020018190555081600a600083815260200190815260200160002081905550600a60008581526020019081526020016000206000905560098054806121bf576121be6134c0565b5b6001900381819060005260206000200160009055905550505050565b60006121e683610986565b905081600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550806008600084815260200190815260200160002081905550505050565b505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6122a881612273565b81146122b357600080fd5b50565b6000813590506122c58161229f565b92915050565b6000602082840312156122e1576122e0612269565b5b60006122ef848285016122b6565b91505092915050565b60008115159050919050565b61230d816122f8565b82525050565b60006020820190506123286000830184612304565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561236857808201518184015260208101905061234d565b83811115612377576000848401525b50505050565b6000601f19601f8301169050919050565b60006123998261232e565b6123a38185612339565b93506123b381856020860161234a565b6123bc8161237d565b840191505092915050565b600060208201905081810360008301526123e1818461238e565b905092915050565b6000819050919050565b6123fc816123e9565b811461240757600080fd5b50565b600081359050612419816123f3565b92915050565b60006020828403121561243557612434612269565b5b60006124438482850161240a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006124778261244c565b9050919050565b6124878161246c565b82525050565b60006020820190506124a2600083018461247e565b92915050565b6124b18161246c565b81146124bc57600080fd5b50565b6000813590506124ce816124a8565b92915050565b600080604083850312156124eb576124ea612269565b5b60006124f9858286016124bf565b925050602061250a8582860161240a565b9150509250929050565b61251d816123e9565b82525050565b60006020820190506125386000830184612514565b92915050565b60008060006060848603121561255757612556612269565b5b6000612565868287016124bf565b9350506020612576868287016124bf565b92505060406125878682870161240a565b9150509250925092565b6000602082840312156125a7576125a6612269565b5b60006125b5848285016124bf565b91505092915050565b6125c7816122f8565b81146125d257600080fd5b50565b6000813590506125e4816125be565b92915050565b6000806040838503121561260157612600612269565b5b600061260f858286016124bf565b9250506020612620858286016125d5565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61266c8261237d565b810181811067ffffffffffffffff8211171561268b5761268a612634565b5b80604052505050565b600061269e61225f565b90506126aa8282612663565b919050565b600067ffffffffffffffff8211156126ca576126c9612634565b5b6126d38261237d565b9050602081019050919050565b82818337600083830152505050565b60006127026126fd846126af565b612694565b90508281526020810184848401111561271e5761271d61262f565b5b6127298482856126e0565b509392505050565b600082601f8301126127465761274561262a565b5b81356127568482602086016126ef565b91505092915050565b6000806000806080858703121561277957612778612269565b5b6000612787878288016124bf565b9450506020612798878288016124bf565b93505060406127a98782880161240a565b925050606085013567ffffffffffffffff8111156127ca576127c961226e565b5b6127d687828801612731565b91505092959194509250565b600080604083850312156127f9576127f8612269565b5b6000612807858286016124bf565b9250506020612818858286016124bf565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061286957607f821691505b60208210810361287c5761287b612822565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b60006128de602183612339565b91506128e982612882565b604082019050919050565b6000602082019050818103600083015261290d816128d1565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000602082015250565b6000612970603e83612339565b915061297b82612914565b604082019050919050565b6000602082019050818103600083015261299f81612963565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206e6f7220617070726f766564000000000000000000000000000000000000602082015250565b6000612a02602e83612339565b9150612a0d826129a6565b604082019050919050565b60006020820190508181036000830152612a31816129f5565b9050919050565b7f455243373231456e756d657261626c653a206f776e657220696e646578206f7560008201527f74206f6620626f756e6473000000000000000000000000000000000000000000602082015250565b6000612a94602b83612339565b9150612a9f82612a38565b604082019050919050565b60006020820190508181036000830152612ac381612a87565b9050919050565b7f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60008201527f7574206f6620626f756e64730000000000000000000000000000000000000000602082015250565b6000612b26602c83612339565b9150612b3182612aca565b604082019050919050565b60006020820190508181036000830152612b5581612b19565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000612bc1601883612339565b9150612bcc82612b8b565b602082019050919050565b60006020820190508181036000830152612bf081612bb4565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000612c53602983612339565b9150612c5e82612bf7565b604082019050919050565b60006020820190508181036000830152612c8281612c46565b9050919050565b600081905092915050565b6000612c9f8261232e565b612ca98185612c89565b9350612cb981856020860161234a565b80840191505092915050565b6000612cd18285612c94565b9150612cdd8284612c94565b91508190509392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612d45602683612339565b9150612d5082612ce9565b604082019050919050565b60006020820190508181036000830152612d7481612d38565b9050919050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000612dd7602583612339565b9150612de282612d7b565b604082019050919050565b60006020820190508181036000830152612e0681612dca565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000612e69602483612339565b9150612e7482612e0d565b604082019050919050565b60006020820190508181036000830152612e9881612e5c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612ed9826123e9565b9150612ee4836123e9565b925082821015612ef757612ef6612e9f565b5b828203905092915050565b6000612f0d826123e9565b9150612f18836123e9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612f4d57612f4c612e9f565b5b828201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612f8e602083612339565b9150612f9982612f58565b602082019050919050565b60006020820190508181036000830152612fbd81612f81565b9050919050565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b6000612ffa602083612339565b915061300582612fc4565b602082019050919050565b6000602082019050818103600083015261302981612fed565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b6000613066601c83612339565b915061307182613030565b602082019050919050565b6000602082019050818103600083015261309581613059565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b60006130d2601983612339565b91506130dd8261309c565b602082019050919050565b60006020820190508181036000830152613101816130c5565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000613164603283612339565b915061316f82613108565b604082019050919050565b6000602082019050818103600083015261319381613157565b9050919050565b60006131a5826123e9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036131d7576131d6612e9f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061321c826123e9565b9150613227836123e9565b925082613237576132366131e2565b5b828204905092915050565b600061324d826123e9565b9150613258836123e9565b925082613268576132676131e2565b5b828206905092915050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b60006132a9601483612339565b91506132b482613273565b602082019050919050565b600060208201905081810360008301526132d88161329c565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b6000613315601083612339565b9150613320826132df565b602082019050919050565b6000602082019050818103600083015261334481613308565b9050919050565b600081519050919050565b600082825260208201905092915050565b60006133728261334b565b61337c8185613356565b935061338c81856020860161234a565b6133958161237d565b840191505092915050565b60006080820190506133b5600083018761247e565b6133c2602083018661247e565b6133cf6040830185612514565b81810360608301526133e18184613367565b905095945050505050565b6000815190506133fb8161229f565b92915050565b60006020828403121561341757613416612269565b5b6000613425848285016133ec565b91505092915050565b7f4552433732315061757361626c653a20746f6b656e207472616e73666572207760008201527f68696c6520706175736564000000000000000000000000000000000000000000602082015250565b600061348a602b83612339565b91506134958261342e565b604082019050919050565b600060208201905081810360008301526134b98161347d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220beec54868da4ee928b5b4c1f79304e6e74d69966e0e0f2a66a511d9d8456555564736f6c634300080d0033";

type ERC721MockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721MockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Mock__factory extends ContractFactory {
  constructor(...args: ERC721MockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Mock> {
    return super.deploy(name, symbol, overrides || {}) as Promise<ERC721Mock>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  override attach(address: string): ERC721Mock {
    return super.attach(address) as ERC721Mock;
  }
  override connect(signer: Signer): ERC721Mock__factory {
    return super.connect(signer) as ERC721Mock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721MockInterface {
    return new utils.Interface(_abi) as ERC721MockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Mock {
    return new Contract(address, _abi, signerOrProvider) as ERC721Mock;
  }
}
